{
	"info": {
		"_postman_id": "podling-api-collection",
		"name": "Podling API",
		"description": "Complete API collection for Podling container orchestrator",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Health Check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/health",
					"host": ["{{base_url}}"],
					"path": ["health"]
				},
				"description": "Check if the master server is running"
			},
			"response": []
		},
		{
			"name": "Tasks",
			"item": [
				{
					"name": "Create Task",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"nginx-task\",\n  \"image\": \"nginx:latest\",\n  \"env\": {\n    \"PORT\": \"8080\"\n  }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/tasks",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "tasks"]
						},
						"description": "Create a new task and automatically schedule it to an available node"
					},
					"response": []
				},
				{
					"name": "List Tasks",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/tasks",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "tasks"]
						},
						"description": "Get all tasks in the system"
					},
					"response": []
				},
				{
					"name": "Get Task",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/tasks/:taskId",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "tasks", ":taskId"],
							"variable": [
								{
									"key": "taskId",
									"value": "20250119123456-abc12345",
									"description": "Task ID returned from Create Task"
								}
							]
						},
						"description": "Get details for a specific task"
					},
					"response": []
				},
				{
					"name": "Update Task Status - Running",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"running\",\n  \"containerId\": \"docker-container-id-123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/tasks/:taskId/status",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "tasks", ":taskId", "status"],
							"variable": [
								{
									"key": "taskId",
									"value": "20250119123456-abc12345"
								}
							]
						},
						"description": "Update task status to running (typically called by workers)"
					},
					"response": []
				},
				{
					"name": "Update Task Status - Completed",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"completed\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/tasks/:taskId/status",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "tasks", ":taskId", "status"],
							"variable": [
								{
									"key": "taskId",
									"value": "20250119123456-abc12345"
								}
							]
						},
						"description": "Update task status to completed"
					},
					"response": []
				},
				{
					"name": "Update Task Status - Failed",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"failed\",\n  \"error\": \"Container crashed\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/tasks/:taskId/status",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "tasks", ":taskId", "status"],
							"variable": [
								{
									"key": "taskId",
									"value": "20250119123456-abc12345"
								}
							]
						},
						"description": "Update task status to failed with error message"
					},
					"response": []
				}
			]
		},
		{
			"name": "Nodes",
			"item": [
				{
					"name": "Register Node",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"hostname\": \"worker-1\",\n  \"port\": 8081,\n  \"capacity\": 10\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/nodes/register",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "nodes", "register"]
						},
						"description": "Register a new worker node with the master"
					},
					"response": []
				},
				{
					"name": "Node Heartbeat",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/nodes/:nodeId/heartbeat",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "nodes", ":nodeId", "heartbeat"],
							"variable": [
								{
									"key": "nodeId",
									"value": "20250119123456-xyz98765",
									"description": "Node ID returned from Register Node"
								}
							]
						},
						"description": "Send heartbeat to update node's last seen time"
					},
					"response": []
				},
				{
					"name": "List Nodes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/nodes",
							"host": ["{{base_url}}"],
							"path": ["api", "v1", "nodes"]
						},
						"description": "Get all registered worker nodes"
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}
